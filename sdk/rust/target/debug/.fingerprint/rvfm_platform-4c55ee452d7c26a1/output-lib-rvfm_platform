{"$message_type":"diagnostic","message":"formatting may not be suitable for sub-register argument","code":{"code":"asm_sub_register","explanation":null},"level":"warning","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":231,"byte_end":233,"line_start":15,"line_end":15,"column_start":46,"column_end":48,"is_primary":false,"text":[{"text":"    asm!(\"csrrs {}, mhartid, zero\", out(reg) id);","highlight_start":46,"highlight_end":48}],"label":"for this argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rvfm_platform/src/intrin.rs","byte_start":202,"byte_end":204,"line_start":15,"line_end":15,"column_start":17,"column_end":19,"is_primary":true,"text":[{"text":"    asm!(\"csrrs {}, mhartid, zero\", out(reg) id);","highlight_start":17,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `{0:w}` to have the register formatted as `w0` (for 32-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`#[warn(asm_sub_register)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: formatting may not be suitable for sub-register argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:15:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    asm!(\"csrrs {}, mhartid, zero\", out(reg) id);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfor this argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: use `{0:w}` to have the register formatted as `w0` (for 32-bit values)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(asm_sub_register)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"formatting may not be suitable for sub-register argument","code":{"code":"asm_sub_register","explanation":null},"level":"warning","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":387,"byte_end":405,"line_start":22,"line_end":22,"column_start":53,"column_end":71,"is_primary":false,"text":[{"text":"        asm!(\"csrrci {}, mstatus, 0b1000\", out(reg) previously_enabled);","highlight_start":53,"highlight_end":71}],"label":"for this argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rvfm_platform/src/intrin.rs","byte_start":356,"byte_end":358,"line_start":22,"line_end":22,"column_start":22,"column_end":24,"is_primary":true,"text":[{"text":"        asm!(\"csrrci {}, mstatus, 0b1000\", out(reg) previously_enabled);","highlight_start":22,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `{0:w}` to have the register formatted as `w0` (for 32-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: formatting may not be suitable for sub-register argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:22:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrci {}, mstatus, 0b1000\", out(reg) previously_enabled);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfor this argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: use `{0:w}` to have the register formatted as `w0` (for 32-bit values)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"formatting may not be suitable for sub-register argument","code":{"code":"asm_sub_register","explanation":null},"level":"warning","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":733,"byte_end":739,"line_start":36,"line_end":36,"column_start":40,"column_end":46,"is_primary":false,"text":[{"text":"        asm!(\"csrw mtvec, {}\", in(reg) vector);","highlight_start":40,"highlight_end":46}],"label":"for this argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rvfm_platform/src/intrin.rs","byte_start":720,"byte_end":722,"line_start":36,"line_end":36,"column_start":27,"column_end":29,"is_primary":true,"text":[{"text":"        asm!(\"csrw mtvec, {}\", in(reg) vector);","highlight_start":27,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `{0:w}` to have the register formatted as `w0` (for 32-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: formatting may not be suitable for sub-register argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:36:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrw mtvec, {}\", in(reg) vector);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfor this argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: use `{0:w}` to have the register formatted as `w0` (for 32-bit values)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"formatting may not be suitable for sub-register argument","code":{"code":"asm_sub_register","explanation":null},"level":"warning","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":893,"byte_end":915,"line_start":43,"line_end":43,"column_start":45,"column_end":67,"is_primary":false,"text":[{"text":"        asm!(\"csrrc zero, mie, {}\", in(reg) external_interrupt_bit);","highlight_start":45,"highlight_end":67}],"label":"for this argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rvfm_platform/src/intrin.rs","byte_start":880,"byte_end":882,"line_start":43,"line_end":43,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"        asm!(\"csrrc zero, mie, {}\", in(reg) external_interrupt_bit);","highlight_start":32,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `{0:w}` to have the register formatted as `w0` (for 32-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: formatting may not be suitable for sub-register argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:43:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrc zero, mie, {}\", in(reg) external_interrupt_bit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfor this argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: use `{0:w}` to have the register formatted as `w0` (for 32-bit values)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"formatting may not be suitable for sub-register argument","code":{"code":"asm_sub_register","explanation":null},"level":"warning","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":1068,"byte_end":1090,"line_start":50,"line_end":50,"column_start":45,"column_end":67,"is_primary":false,"text":[{"text":"        asm!(\"csrrs zero, mie, {}\", in(reg) external_interrupt_bit);","highlight_start":45,"highlight_end":67}],"label":"for this argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rvfm_platform/src/intrin.rs","byte_start":1055,"byte_end":1057,"line_start":50,"line_end":50,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"        asm!(\"csrrs zero, mie, {}\", in(reg) external_interrupt_bit);","highlight_start":32,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `{0:w}` to have the register formatted as `w0` (for 32-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: formatting may not be suitable for sub-register argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:50:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrs zero, mie, {}\", in(reg) external_interrupt_bit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfor this argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: use `{0:w}` to have the register formatted as `w0` (for 32-bit values)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"formatting may not be suitable for sub-register argument","code":{"code":"asm_sub_register","explanation":null},"level":"warning","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":1243,"byte_end":1265,"line_start":57,"line_end":57,"column_start":45,"column_end":67,"is_primary":false,"text":[{"text":"        asm!(\"csrrc zero, mie, {}\", in(reg) software_interrupt_bit);","highlight_start":45,"highlight_end":67}],"label":"for this argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rvfm_platform/src/intrin.rs","byte_start":1230,"byte_end":1232,"line_start":57,"line_end":57,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"        asm!(\"csrrc zero, mie, {}\", in(reg) software_interrupt_bit);","highlight_start":32,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `{0:w}` to have the register formatted as `w0` (for 32-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: formatting may not be suitable for sub-register argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:57:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrc zero, mie, {}\", in(reg) software_interrupt_bit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfor this argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: use `{0:w}` to have the register formatted as `w0` (for 32-bit values)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"formatting may not be suitable for sub-register argument","code":{"code":"asm_sub_register","explanation":null},"level":"warning","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":1417,"byte_end":1439,"line_start":64,"line_end":64,"column_start":45,"column_end":67,"is_primary":false,"text":[{"text":"        asm!(\"csrrs zero, mie, {}\", in(reg) software_interrupt_bit);","highlight_start":45,"highlight_end":67}],"label":"for this argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"rvfm_platform/src/intrin.rs","byte_start":1404,"byte_end":1406,"line_start":64,"line_end":64,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"        asm!(\"csrrs zero, mie, {}\", in(reg) software_interrupt_bit);","highlight_start":32,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `{0:w}` to have the register formatted as `w0` (for 32-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: formatting may not be suitable for sub-register argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:64:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrs zero, mie, {}\", in(reg) software_interrupt_bit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfor this argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: use `{0:w}` to have the register formatted as `w0` (for 32-bit values)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or use `{0:x}` to keep the default formatting of `x0` (for 64-bit values)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused variable: `value`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"rvfm_platform/src/spu/command.rs","byte_start":1313,"byte_end":1318,"line_start":44,"line_end":44,"column_start":44,"column_end":49,"is_primary":true,"text":[{"text":"    fn write_flag(self, flag_address: u32, value: u32, interrupt: bool) -> Result<Self, ()> {","highlight_start":44,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"rvfm_platform/src/spu/command.rs","byte_start":1313,"byte_end":1318,"line_start":44,"line_end":44,"column_start":44,"column_end":49,"is_primary":true,"text":[{"text":"    fn write_flag(self, flag_address: u32, value: u32, interrupt: bool) -> Result<Self, ()> {","highlight_start":44,"highlight_end":49}],"label":null,"suggested_replacement":"_value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused variable: `value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/spu/command.rs:44:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn write_flag(self, flag_address: u32, value: u32, interrupt: bool) -> Result<Self, ()> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: if this is intentional, prefix it with an underscore: `_value`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unrecognized instruction mnemonic","code":null,"level":"error","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":196,"byte_end":196,"line_start":15,"line_end":15,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    asm!(\"csrrs {}, mhartid, zero\", out(reg) id);","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"instantiated into assembly here","code":null,"level":"note","spans":[{"file_name":"<inline asm>","byte_start":1,"byte_end":1,"line_start":1,"line_end":1,"column_start":2,"column_end":2,"is_primary":true,"text":[{"text":"\tcsrrs x8, mhartid, zero","highlight_start":2,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unrecognized instruction mnemonic\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:15:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    asm!(\"csrrs {}, mhartid, zero\", out(reg) id);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: instantiated into assembly here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m<inline asm>:1:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    csrrs x8, mhartid, zero\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unrecognized instruction mnemonic","code":null,"level":"error","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":349,"byte_end":349,"line_start":22,"line_end":22,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"        asm!(\"csrrci {}, mstatus, 0b1000\", out(reg) previously_enabled);","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"instantiated into assembly here","code":null,"level":"note","spans":[{"file_name":"<inline asm>","byte_start":1,"byte_end":1,"line_start":1,"line_end":1,"column_start":2,"column_end":2,"is_primary":true,"text":[{"text":"\tcsrrci x8, mstatus, 0b1000","highlight_start":2,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unrecognized instruction mnemonic\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:22:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrci {}, mstatus, 0b1000\", out(reg) previously_enabled);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: instantiated into assembly here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m<inline asm>:1:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    csrrci x8, mstatus, 0b1000\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unrecognized instruction mnemonic","code":null,"level":"error","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":506,"byte_end":506,"line_start":29,"line_end":29,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"        asm!(\"csrrsi zero, mstatus, 0b1000\");","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"instantiated into assembly here","code":null,"level":"note","spans":[{"file_name":"<inline asm>","byte_start":1,"byte_end":1,"line_start":1,"line_end":1,"column_start":2,"column_end":2,"is_primary":true,"text":[{"text":"\tcsrrsi zero, mstatus, 0b1000","highlight_start":2,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unrecognized instruction mnemonic\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:29:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrsi zero, mstatus, 0b1000\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: instantiated into assembly here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m<inline asm>:1:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    csrrsi zero, mstatus, 0b1000\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unrecognized instruction mnemonic","code":null,"level":"error","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":708,"byte_end":708,"line_start":36,"line_end":36,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"        asm!(\"csrw mtvec, {}\", in(reg) vector);","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"instantiated into assembly here","code":null,"level":"note","spans":[{"file_name":"<inline asm>","byte_start":1,"byte_end":1,"line_start":1,"line_end":1,"column_start":2,"column_end":2,"is_primary":true,"text":[{"text":"\tcsrw mtvec, x8","highlight_start":2,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unrecognized instruction mnemonic\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:36:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrw mtvec, {}\", in(reg) vector);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: instantiated into assembly here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m<inline asm>:1:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    csrw mtvec, x8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unrecognized instruction mnemonic","code":null,"level":"error","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":863,"byte_end":863,"line_start":43,"line_end":43,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"        asm!(\"csrrc zero, mie, {}\", in(reg) external_interrupt_bit);","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"instantiated into assembly here","code":null,"level":"note","spans":[{"file_name":"<inline asm>","byte_start":1,"byte_end":1,"line_start":1,"line_end":1,"column_start":2,"column_end":2,"is_primary":true,"text":[{"text":"\tcsrrc zero, mie, x8","highlight_start":2,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unrecognized instruction mnemonic\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:43:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrc zero, mie, {}\", in(reg) external_interrupt_bit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: instantiated into assembly here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m<inline asm>:1:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    csrrc zero, mie, x8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unrecognized instruction mnemonic","code":null,"level":"error","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":1038,"byte_end":1038,"line_start":50,"line_end":50,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"        asm!(\"csrrs zero, mie, {}\", in(reg) external_interrupt_bit);","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"instantiated into assembly here","code":null,"level":"note","spans":[{"file_name":"<inline asm>","byte_start":1,"byte_end":1,"line_start":1,"line_end":1,"column_start":2,"column_end":2,"is_primary":true,"text":[{"text":"\tcsrrs zero, mie, x8","highlight_start":2,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unrecognized instruction mnemonic\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:50:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrs zero, mie, {}\", in(reg) external_interrupt_bit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: instantiated into assembly here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m<inline asm>:1:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    csrrs zero, mie, x8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unrecognized instruction mnemonic","code":null,"level":"error","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":1213,"byte_end":1213,"line_start":57,"line_end":57,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"        asm!(\"csrrc zero, mie, {}\", in(reg) software_interrupt_bit);","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"instantiated into assembly here","code":null,"level":"note","spans":[{"file_name":"<inline asm>","byte_start":1,"byte_end":1,"line_start":1,"line_end":1,"column_start":2,"column_end":2,"is_primary":true,"text":[{"text":"\tcsrrc zero, mie, x8","highlight_start":2,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unrecognized instruction mnemonic\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:57:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrc zero, mie, {}\", in(reg) software_interrupt_bit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: instantiated into assembly here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m<inline asm>:1:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    csrrc zero, mie, x8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unrecognized instruction mnemonic","code":null,"level":"error","spans":[{"file_name":"rvfm_platform/src/intrin.rs","byte_start":1387,"byte_end":1387,"line_start":64,"line_end":64,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"        asm!(\"csrrs zero, mie, {}\", in(reg) software_interrupt_bit);","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"instantiated into assembly here","code":null,"level":"note","spans":[{"file_name":"<inline asm>","byte_start":1,"byte_end":1,"line_start":1,"line_end":1,"column_start":2,"column_end":2,"is_primary":true,"text":[{"text":"\tcsrrs zero, mie, x8","highlight_start":2,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: unrecognized instruction mnemonic\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mrvfm_platform/src/intrin.rs:64:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        asm!(\"csrrs zero, mie, {}\", in(reg) software_interrupt_bit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: instantiated into assembly here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m<inline asm>:1:2\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    csrrs zero, mie, x8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 8 previous errors; 8 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 8 previous errors; 8 warnings emitted\u001b[0m\n\n"}
